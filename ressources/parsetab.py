
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "COMMAND INTEGER LABEL MAIN REGISTER STACKPOINTERline : instructioninstruction : COMMAND REGISTER ',' REGISTER ',' REGISTER line : COMMAND COMMAND instruction : COMMAND REGISTER ',' REGISTER  instruction : COMMAND REGISTER ',' REGISTER ',' INTEGERinstruction : COMMAND REGISTER ',' INTEGERinstruction : COMMAND REGISTER ',' '[' STACKPOINTER ',' INTEGER ']' instruction : COMMAND REGISTER ',' '[' STACKPOINTER ']' instruction : COMMAND '[' STACKPOINTER ',' ']' STACKPOINTER ',' INTEGERinstruction : COMMAND STACKPOINTER ',' STACKPOINTER ',' INTEGERinstruction : COMMAND STACKPOINTER ',' INTEGER instruction : COMMAND LABEL \n\t\tline : MAIN\n\t\tline : LABEL "
    
_lr_action_items = {'COMMAND':([0,3,],[3,6,]),'MAIN':([0,],[4,]),'LABEL':([0,3,],[5,10,]),'$end':([1,2,4,5,6,10,14,15,19,24,25,27,29,32,33,],[0,-1,-13,-14,-3,-12,-4,-6,-11,-2,-5,-8,-10,-7,-9,]),'REGISTER':([3,11,20,],[7,14,24,]),'[':([3,11,],[8,16,]),'STACKPOINTER':([3,8,13,16,22,],[9,12,18,21,28,]),',':([7,9,12,14,18,21,28,],[11,13,17,20,23,26,31,]),'INTEGER':([11,13,20,23,26,31,],[15,19,25,29,30,33,]),']':([17,21,30,],[22,27,32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'line':([0,],[1,]),'instruction':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> line","S'",1,None,None,None),
  ('line -> instruction','line',1,'p_statement_expr','syntaxic.py',9),
  ('instruction -> COMMAND REGISTER , REGISTER , REGISTER','instruction',6,'p_3_REGISTER_COMMAND','syntaxic.py',26),
  ('line -> COMMAND COMMAND','line',2,'p_COMMAND','syntaxic.py',43),
  ('instruction -> COMMAND REGISTER , REGISTER','instruction',4,'p_2_REGISTER_COMMAND','syntaxic.py',48),
  ('instruction -> COMMAND REGISTER , REGISTER , INTEGER','instruction',6,'p_2_REGISTER_COMMAND_SHIFT','syntaxic.py',72),
  ('instruction -> COMMAND REGISTER , INTEGER','instruction',4,'p_1_REGISTER_COMMAND','syntaxic.py',96),
  ('instruction -> COMMAND REGISTER , [ STACKPOINTER , INTEGER ]','instruction',8,'p_REGISTER_STACKPOINTER_SHIFT','syntaxic.py',107),
  ('instruction -> COMMAND REGISTER , [ STACKPOINTER ]','instruction',6,'p_REGISTER_STACKPOINTER','syntaxic.py',117),
  ('instruction -> COMMAND [ STACKPOINTER , ] STACKPOINTER , INTEGER','instruction',8,'p_2_STACKPOINTER_COMMAND_SHIFT_WEIRD','syntaxic.py',127),
  ('instruction -> COMMAND STACKPOINTER , STACKPOINTER , INTEGER','instruction',6,'p_2_STACKPOINTER_COMMAND_SHIFT','syntaxic.py',143),
  ('instruction -> COMMAND STACKPOINTER , INTEGER','instruction',4,'p_STACKPOINTER_COMMAND_SHIFT','syntaxic.py',158),
  ('instruction -> COMMAND LABEL','instruction',2,'p_COMMENT_LOOP','syntaxic.py',174),
  ('line -> MAIN','line',1,'p_COMMENT','syntaxic.py',190),
  ('line -> LABEL','line',1,'p_COMMENT','syntaxic.py',191),
]
